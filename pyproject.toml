[tool.poetry]
name = "fact_checking_backend"
version = "0.1.0"
description = ""
authors = ["gvu <gvu@inovex.de>"]

[tool.poetry.dependencies]
python = "^3.8.10"
Django = "^4.1.3"
django-elasticsearch-dsl = "^7.2.2"
djangorestframework = "^3.14.0"
django-factory-boy = "^1.0.0"
factory-boy = "^3.2.1"
elasticsearch-dsl = "^7.4.0"
django-elasticsearch-dsl-drf = "^0.22.5"
tzdata = "^2022.6"
google-api-python-client = "^2.66.0"
pymediawiki = "^0.7.2"
validators = "0.18.2"
farm-haystack = {extras = ["crawler", "graphdb", "inmemorygraph", "only-milvus", "only-pinecone", "opensearch", "preprocessing", "sql", "weaviate"], version = "^1.11.0"}

[tool.poetry.dev-dependencies]
prospector = {extras = ["with_pyroma", "with_bandit", "with_mypy"], version = "^1.7.7"}
pre-commit = "^2.20.0"
pytest = "^7.2.0"
unittest = "^0.0"
black = "^22.10.0"
coverage = "^6.5.0"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 79
include = '\.pyi?$'
exclude = '''
/(
    \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

# Setting to control coverage.py
[tool.coverage.run]
branch = true
data_file = 'coverage/.coverage'

[tool.coverage.report]
# Regexes for lines to exclude from consideration
exclude_lines = [
  # Have to re-enable the standard pragma
  'pragma: no cover',
  # Don't complain about missing debug-only code: 
  'def __repr__',
  'if self\.debug',
  # Don't complain if tests don't hit defensive assertion code:
  'raise AssertionError',
  'raise NotImplementedError',
  # Don't complain if non-runnable code isn't run:
  'if 0:',
  'if __name__ == .__main__.:',
  # Don't complain about abstract methods, they aren't run:
  '@(abc\.)?abstractmethod'
]
ignore_errors = true

[tool.coverage.html]
directory = 'coverage/coverage_html_report'